-- CRIAÇÃO DAS TABELAS

CREATE TABLE gestores_ambientais (
  id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  nome varchar UNIQUE NOT NULL,
  tipo varchar,
  estado varchar(2) DEFAULT 'PE',
  status_contrato varchar
);

CREATE TABLE usuarios_gestores (
  id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  usuario_id integer UNIQUE NOT NULL,
  gestor_ambiental_id integer NOT NULL,
  cargo varchar
);

CREATE TABLE relatorios_gestao (
  id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  gestor_ambiental_id integer NOT NULL,
  tipo_relatorio varchar NOT NULL,
  data_geracao timestamp DEFAULT (now()),
  dados_json jsonb
);

CREATE TABLE usuarios (
  id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  tipo_perfil varchar NOT NULL DEFAULT 'Turista',
  nome varchar NOT NULL,
  sobrenome varchar NOT NULL,
  email varchar UNIQUE,
  senha_hash varchar,
  idade integer,
  pais_origem varchar NOT NULL DEFAULT 'Brasil',
  estado_origem varchar,
  cidade_origem varchar,
  sexo varchar(10),
  criado_em timestamp DEFAULT (now())
);

CREATE TABLE zonas (
  id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  nome varchar NOT NULL,
  descricao text,
  regras text,
  restrita boolean DEFAULT false,
  geometria geometry(Polygon,4326) NOT NULL
);

CREATE TABLE placas (
  id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  zona_id integer NOT NULL,
  codigo_qr varchar UNIQUE NOT NULL,
  descricao text,
  atividades_autorizadas jsonb,
  latitude double precision,
  longitude double precision
);

CREATE TABLE acessos_qr (
  id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  placa_id integer NOT NULL,
  usuario_id integer,
  timestamp_acesso timestamp DEFAULT (now()),
  latitude_dispositivo decimal(10,8),
  longitude_dispositivo decimal(11,8),
  info_dispositivo varchar
);

CREATE TABLE historico_acesso_zonas (
  id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  usuario_id integer NOT NULL,
  zona_id integer NOT NULL,
  timestamp timestamp DEFAULT (now()),
  via_qrcode boolean DEFAULT false
);

CREATE TABLE historico_localizacao (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  usuario_id integer NOT NULL,
  timestamp_localizacao timestamp NOT NULL DEFAULT (now()),
  coordenadas geometry(Point,4326) NOT NULL
);

CREATE TABLE logs_acesso_zona_restrita (
  id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  usuario_id integer NOT NULL,
  zona_id integer NOT NULL,
  timestamp_entrada timestamp NOT NULL DEFAULT (now()),
  coordenada_entrada geometry(Point,4326),
  notificacao_enviada boolean DEFAULT false
);

CREATE TABLE feedbacks (
  id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  usuario_id integer,
  ponto_interesse_id integer,
  tipo_feedback varchar NOT NULL,
  mensagem text NOT NULL,
  status varchar DEFAULT 'Recebido',
  criado_em timestamp DEFAULT (now())
);

CREATE TABLE usuarios_pontos_favoritos (
  usuario_id integer NOT NULL,
  ponto_interesse_id integer NOT NULL,
  criado_em timestamp DEFAULT (now()),
  PRIMARY KEY (usuario_id, ponto_interesse_id)
);

CREATE TABLE conteudos_educativos (
  id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  placa_id integer NOT NULL,
  titulo varchar NOT NULL,
  tipo varchar NOT NULL,
  conteudo text NOT NULL,
  topico varchar
);

CREATE TABLE comunidades_locais (
  id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  nome varchar NOT NULL,
  descricao text,
  localizacao_base geometry(Point,4326),
  contato_email varchar
);

CREATE TABLE roteiros_turisticos (
  id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  nome varchar NOT NULL,
  descricao text,
  comunidade_id integer,
  tipo varchar
);

CREATE TABLE roteiros_pontos_interesse (
  roteiro_id integer NOT NULL,
  ponto_interesse_id integer NOT NULL,
  ordem integer,
  PRIMARY KEY (roteiro_id, ponto_interesse_id)
);

CREATE TABLE parceiros_b2b (
  id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  usuario_id integer UNIQUE NOT NULL,
  nome_negocio varchar NOT NULL,
  cnpj varchar(14) UNIQUE,
  categoria varchar
);

CREATE TABLE produtos_marketplace (
  id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  parceiro_b2b_id integer,
  comunidade_id integer,
  nome varchar NOT NULL,
  descricao text,
  preco decimal(10,2) NOT NULL,
  ativo boolean DEFAULT true
);

CREATE TABLE transacoes_marketplace (
  id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  produto_id integer NOT NULL,
  comprador_usuario_id integer NOT NULL,
  data_transacao timestamp DEFAULT (now()),
  valor_total decimal(10,2) NOT NULL,
  status_pagamento varchar DEFAULT 'Pendente',
  comissao_plataforma decimal(10,2)
);

CREATE TABLE boletins_balneabilidade (
  id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  ponto_interesse_id integer NOT NULL,
  data_emissao date NOT NULL,
  status varchar NOT NULL,
  fonte varchar DEFAULT 'CPRH'
);

CREATE TABLE interacoes_ia (
  id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  usuario_id integer,
  timestamp_interacao timestamp DEFAULT (now()),
  pergunta text,
  resposta_gerada text,
  contexto_localizacao geometry(Point,4326),
  avaliacao_utilidade integer
);

CREATE TABLE perfil_turista_analytics (
  id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  usuario_id integer UNIQUE NOT NULL,
  origem_cidade varchar,
  origem_pais varchar DEFAULT 'Brasil',
  interesses_declarados jsonb,
  total_acessos_qr integer DEFAULT 0,
  zonas_mais_visitadas jsonb
);

-- ==========================
-- ÍNDICES ESPACIAIS
-- ==========================

CREATE INDEX idx_zonas_geometria ON zonas USING GIST(geometria);
CREATE INDEX idx_historico_localizacao_coordenadas ON historico_localizacao USING GIST(coordenadas);
CREATE INDEX idx_logs_acesso_zona_restrita_coordenada ON logs_acesso_zona_restrita USING GIST(coordenada_entrada);
CREATE INDEX idx_comunidades_locais_localizacao ON comunidades_locais USING GIST(localizacao_base);
CREATE INDEX idx_interacoes_ia_contexto_localizacao ON interacoes_ia USING GIST(contexto_localizacao);

-- ==========================
-- CHAVES E CONSTRAINTS
-- ==========================

ALTER TABLE usuarios_gestores ADD FOREIGN KEY (usuario_id) REFERENCES usuarios (id);
ALTER TABLE usuarios_gestores ADD FOREIGN KEY (gestor_ambiental_id) REFERENCES gestores_ambientais (id);

ALTER TABLE relatorios_gestao ADD FOREIGN KEY (gestor_ambiental_id) REFERENCES gestores_ambientais (id);

ALTER TABLE placas ADD FOREIGN KEY (zona_id) REFERENCES zonas (id);

ALTER TABLE acessos_qr ADD FOREIGN KEY (placa_id) REFERENCES placas (id);
ALTER TABLE acessos_qr ADD FOREIGN KEY (usuario_id) REFERENCES usuarios (id);

ALTER TABLE historico_acesso_zonas ADD FOREIGN KEY (usuario_id) REFERENCES usuarios (id);
ALTER TABLE historico_acesso_zonas ADD FOREIGN KEY (zona_id) REFERENCES zonas (id);

ALTER TABLE historico_localizacao ADD FOREIGN KEY (usuario_id) REFERENCES usuarios (id);

ALTER TABLE logs_acesso_zona_restrita ADD FOREIGN KEY (usuario_id) REFERENCES usuarios (id);
ALTER TABLE logs_acesso_zona_restrita ADD FOREIGN KEY (zona_id) REFERENCES zonas (id);

ALTER TABLE feedbacks ADD FOREIGN KEY (usuario_id) REFERENCES usuarios (id);

ALTER TABLE usuarios_pontos_favoritos ADD FOREIGN KEY (usuario_id) REFERENCES usuarios (id);

ALTER TABLE conteudos_educativos ADD FOREIGN KEY (placa_id) REFERENCES placas (id);

ALTER TABLE roteiros_turisticos ADD FOREIGN KEY (comunidade_id) REFERENCES comunidades_locais (id);

ALTER TABLE roteiros_pontos_interesse ADD FOREIGN KEY (roteiro_id) REFERENCES roteiros_turisticos (id);
ALTER TABLE roteiros_pontos_interesse ADD FOREIGN KEY (ponto_interesse_id) REFERENCES usuarios_pontos_favoritos (ponto_interesse_id);

ALTER TABLE parceiros_b2b ADD FOREIGN KEY (usuario_id) REFERENCES usuarios (id);

ALTER TABLE produtos_marketplace ADD FOREIGN KEY (parceiro_b2b_id) REFERENCES parceiros_b2b (id);

ALTER TABLE transacoes_marketplace ADD FOREIGN KEY (produto_id) REFERENCES produtos_marketplace (id);
ALTER TABLE transacoes_marketplace ADD FOREIGN KEY (comprador_usuario_id) REFERENCES usuarios (id);

ALTER TABLE boletins_balneabilidade ADD FOREIGN KEY (ponto_interesse_id) REFERENCES usuarios_pontos_favoritos (ponto_interesse_id);

ALTER TABLE interacoes_ia ADD FOREIGN KEY (usuario_id) REFERENCES usuarios (id);

ALTER TABLE perfil_turista_analytics ADD FOREIGN KEY (usuario_id) REFERENCES usuarios (id);

-- ==========================
-- REGRAS DE SEGURANÇA (RLS) PARA GESTORES AMBIENTAIS
-- ==========================

-- Criar role para gestores ambientais
DO $$
BEGIN
  IF NOT EXISTS (SELECT FROM pg_roles WHERE rolname = 'gestores_ambientais') THEN
    CREATE ROLE gestores_ambientais NOLOGIN;
  END IF;
END$$;

-- Ativar RLS e negar acesso para gestores em conteúdos educativos
ALTER TABLE conteudos_educativos ENABLE ROW LEVEL SECURITY;
CREATE POLICY gestores_no_acesso_conteudos ON conteudos_educativos
  FOR SELECT TO gestores_ambientais
  USING (false);

-- Ativar RLS e negar acesso para gestores em produtos marketplace
ALTER TABLE produtos_marketplace ENABLE ROW LEVEL SECURITY;
CREATE POLICY gestores_no_acesso_marketplace_produtos ON produtos_marketplace
  FOR SELECT TO gestores_ambientais
  USING (false);

-- Ativar RLS e negar acesso para gestores em transações marketplace
ALTER TABLE transacoes_marketplace ENABLE ROW LEVEL SECURITY;
CREATE POLICY gestores_no_acesso_marketplace_transacoes ON transacoes_marketplace
  FOR SELECT TO gestores_ambientais
  USING (false);

-- Revogar acesso direto dos gestores nas tabelas restritas
REVOKE ALL ON conteudos_educativos FROM gestores_ambientais;
REVOKE ALL ON produtos_marketplace FROM gestores_ambientais;
REVOKE ALL ON transacoes_marketplace FROM gestores_ambientais;

-- Garantir acesso para gestores às tabelas de relatórios e dados permitidos
GRANT SELECT ON relatorios_gestao TO gestores_ambientais;
GRANT SELECT ON historico_acesso_zonas TO gestores_ambientais;
GRANT SELECT ON acessos_qr TO gestores_ambientais;
GRANT SELECT ON historico_localizacao TO gestores_ambientais;
GRANT SELECT ON logs_acesso_zona_restrita TO gestores_ambientais;
GRANT SELECT ON feedbacks TO gestores_ambientais;
GRANT SELECT ON perfil_turista_analytics TO gestores_ambientais;

-- Criar view para relatórios (exemplo)
CREATE OR REPLACE VIEW vw_relatorios_gestao_gestores AS
SELECT * FROM relatorios_gestao;

GRANT SELECT ON vw_relatorios_gestao_gestores TO gestores_ambientais;

-- ==========================
-- ÍNDICES DE PERFORMANCE ADICIONAIS (não espaciais)
-- ==========================

CREATE INDEX idx_acessos_qr_placa ON acessos_qr(placa_id);
CREATE INDEX idx_acessos_qr_usuario ON acessos_qr(usuario_id);
CREATE INDEX idx_historico_acesso_zonas_usuario ON historico_acesso_zonas(usuario_id);
CREATE INDEX idx_historico_acesso_zonas_zona ON historico_acesso_zonas(zona_id);
CREATE INDEX idx_historico_localizacao_usuario ON historico_localizacao(usuario_id);
CREATE INDEX idx_logs_acesso_zona_restrita_usuario ON logs_acesso_zona_restrita(usuario_id);
CREATE INDEX idx_logs_acesso_zona_restrita_zona ON logs_acesso_zona_restrita(zona_id);
CREATE INDEX idx_feedbacks_usuario ON feedbacks(usuario_id);
CREATE INDEX idx_perfil_turista_usuario ON perfil_turista_analytics(usuario_id);

